name: CML

on:
  workflow_dispatch:
    inputs:
      deploy_debug_enabled:
        description: "Run the deployment with tmate.io debugging enabled"
        required: true
        type: boolean
        default: false
      model_debug_enabled:
        description: "Run the model with tmate.io debugging enabled"
        required: true
        type: boolean
        default: false
  push:
    branches:
      - "exp*"
    paths:
      - "pyrovelocity/**"
      - "reproducibility/figures/*.py"
      - "reproducibility/figures/dvc.*"
      - "reproducibility/figures/config.yaml"

# Review/set variables via gh CLI:
#
#   gh secret list --repo=$(GH_REPO)
#   gh secret set PERSONAL_ACCESS_TOKEN --repo="$(GH_REPO)" --body="$(GH_PAT)"
#
# see also:
#   https://cml.dev/doc/self-hosted-runners?tab=GitHub#personal-access-token
env:
  REPO_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  GOOGLE_APPLICATION_CREDENTIALS_DATA: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_DATA }}
  GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  TF_LOG_PROVIDER: DEBUG

jobs:
  deploy-runner:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: iterative/setup-cml@v1
      - name: Setup tmate debug session
        uses: mxschmitt/action-tmate@v3
        if: ${{ inputs.deploy_debug_enabled }}
      - name: Deploy cloud runner instance
        run: |
          cml runner launch \
          --labels=cml-gpu \
          --reuse-idle \
          --cloud=gcp \
          --cloud-type=n1-standard-16+nvidia-tesla-t4*1 \
          --cloud-hdd-size=300 \
          --cloud-spot \
          --cloud-region=us-central1-a \
          --cloud-permission-set="${GCP_SERVICE_ACCOUNT},scopes=storage-rw"

  train-model:
    needs: deploy-runner
    runs-on: [self-hosted, cml-gpu]
    container:
      # image: iterativeai/cml:0-dvc2-base1-gpu
      image: ghcr.io/pinellolab/pyrovelocity:master
      options: --gpus all
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup tmate debug session
        uses: mxschmitt/action-tmate@v3
        if: ${{ inputs.model_debug_enabled }}
      - name: CML setup
        run: cml ci
      # To test uncommitted changes and/or individual pipeline stages
      # replace `dvc repro` with something analogous to:
      #   dvc exp run \
      #   -S config.yaml:model_training.pancreas_model1.training_parameters.max_epochs=421 \
      #   train_pancreas_model1
      - name: Run experiment and submit report
        run: |
          set -x

          ### Execute experiment run and submit PR ###
          pip install -e .
          cd reproducibility/figures
          dvc pull
          # dvc repro
          dvc exp run \
          -S config.yaml:model_training.pancreas_model1.training_parameters.max_epochs=425 \
          train_pancreas_model1
          dvc push
          cml pr create --skip-ci .
          #########################


          ### Post experiment report comment ###
          echo "## Metrics" >> report.md
          dvc metrics show --md models/pancreas_model1/metrics.json >> report.md

          echo "## Training plots" >> report.md
          echo '!'"[ELBO](./models/pancreas_model1/loss_plot.png)" >> report.md

          echo "## Run information" >> report.md
          printf "\n\`\`\`json\n" >> report.md
          cat models/pancreas_model1/run_info.json >> report.md
          printf "\n\`\`\`\n" >> report.md

          cml comment update --target=pr report.md
          #########################

          set +x
