name: "Setup Environment"
description: "Shared steps to setup the environment for CI jobs"

inputs:
  python_version:
    description: "Python version to setup"
    required: true
  debug_enabled:
    description: "Run with tmate.io debugging enabled"
    required: true
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Set up Python
      id: setup-python
      uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # ratchet:actions/setup-python@v4
      with:
        python-version: ${{ inputs.python_version }}
    - name: Install system dependencies
      shell: bash
      run: |
        echo "install system dependencies"
        # sudo apt-get update
        # sudo apt-get install -y tree
    - uses: r-lib/actions/setup-pandoc@e40ad904310fc92e96951c1b0d64f3de6cbe9e14 # ratchet:r-lib/actions/setup-pandoc@v2
      with:
        pandoc-version: "3.1.11"
    - name: Install Poetry
      uses: snok/install-poetry@93ada01c735cc8a383ce0ce2ae205a21c415379b # ratchet:snok/install-poetry@v1
      with:
        version: 1.7.1
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # ratchet:actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      shell: bash
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --with docs,lint,test,workflows --no-interaction --no-root
    - name: Install project
      shell: bash
      run: poetry install --with docs,lint,test,workflows --no-interaction
    - name: "Setup tmate debug session"
      uses: mxschmitt/action-tmate@a283f9441d2d96eb62436dc46d7014f5d357ac22 # ratchet:mxschmitt/action-tmate@v3
      if: ${{ inputs.debug_enabled == 'true' }}
